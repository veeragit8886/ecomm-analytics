{"version":3,"file":"index-nIbJzWji.js","sources":["../../src/pages/executive-overview-dashboard/components/KPICard.jsx","../../src/pages/executive-overview-dashboard/components/DateRangePicker.jsx","../../src/pages/executive-overview-dashboard/components/RevenueChart.jsx","../../src/pages/executive-overview-dashboard/components/AlertsPanel.jsx","../../src/pages/executive-overview-dashboard/components/GeographicHeatmap.jsx","../../src/pages/executive-overview-dashboard/components/ExecutiveSummary.jsx","../../src/components/ui/LoadingIndicator.jsx","../../src/pages/executive-overview-dashboard/index.jsx"],"sourcesContent":["import React from 'react';\nimport Icon from '../../../components/AppIcon';\n\nconst KPICard = ({ \n  title, \n  value, \n  change, \n  changeType, \n  icon, \n  trend = [], \n  loading = false,\n  className = '' \n}) => {\n  const getChangeColor = () => {\n    if (changeType === 'positive') return 'text-success';\n    if (changeType === 'negative') return 'text-error';\n    return 'text-text-muted';\n  };\n\n  const getChangeIcon = () => {\n    if (changeType === 'positive') return 'TrendingUp';\n    if (changeType === 'negative') return 'TrendingDown';\n    return 'Minus';\n  };\n\n  const renderSparkline = () => {\n    if (!trend.length) return null;\n    \n    const max = Math.max(...trend);\n    const min = Math.min(...trend);\n    const range = max - min || 1;\n    \n    const points = trend.map((value, index) => {\n      const x = (index / (trend.length - 1)) * 100;\n      const y = 100 - ((value - min) / range) * 100;\n      return `${x},${y}`;\n    }).join(' ');\n\n    return (\n      <div className=\"mt-2 h-8 w-full\">\n        <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" className=\"overflow-visible\">\n          <polyline\n            points={points}\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            className={changeType === 'positive' ? 'text-success' : changeType === 'negative' ? 'text-error' : 'text-primary'}\n          />\n        </svg>\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className={`bg-surface rounded-lg border border-border p-6 ${className}`}>\n        <div className=\"animate-pulse\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"h-4 bg-secondary-200 rounded w-24\"></div>\n            <div className=\"h-8 w-8 bg-secondary-200 rounded\"></div>\n          </div>\n          <div className=\"h-8 bg-secondary-200 rounded w-32 mb-2\"></div>\n          <div className=\"h-4 bg-secondary-200 rounded w-20\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`bg-surface rounded-lg border border-border p-6 hover:shadow-elevated transition-shadow duration-200 ${className}`}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-sm font-medium text-text-secondary\">{title}</h3>\n        <div className=\"flex items-center justify-center w-8 h-8 bg-primary-50 rounded-lg\">\n          <Icon name={icon} size={16} color=\"var(--color-primary)\" strokeWidth={2} />\n        </div>\n      </div>\n      \n      <div className=\"mb-2\">\n        <span className=\"text-2xl font-bold text-text-primary\">{value}</span>\n      </div>\n      \n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-1\">\n          <Icon \n            name={getChangeIcon()} \n            size={14} \n            className={getChangeColor()}\n            strokeWidth={2}\n          />\n          <span className={`text-sm font-medium ${getChangeColor()}`}>\n            {change}\n          </span>\n        </div>\n        \n        {trend.length > 0 && (\n          <div className=\"flex-1 ml-4\">\n            {renderSparkline()}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default KPICard;","import React, { useState } from 'react';\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst DateRangePicker = ({ onDateRangeChange, onComparisonToggle, showComparison = false }) => {\n  const [selectedPeriod, setSelectedPeriod] = useState('MTD');\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [comparisonEnabled, setComparisonEnabled] = useState(showComparison);\n\n  const fiscalPeriods = [\n    { key: 'MTD', label: 'Month to Date', description: 'Current month performance' },\n    { key: 'QTD', label: 'Quarter to Date', description: 'Current quarter performance' },\n    { key: 'YTD', label: 'Year to Date', description: 'Current year performance' },\n    { key: 'L30D', label: 'Last 30 Days', description: 'Rolling 30-day period' },\n    { key: 'L90D', label: 'Last 90 Days', description: 'Rolling 90-day period' },\n    { key: 'LY', label: 'Last Year', description: 'Previous year comparison' }\n  ];\n\n  const handlePeriodSelect = (period) => {\n    setSelectedPeriod(period.key);\n    setIsDropdownOpen(false);\n    if (onDateRangeChange) {\n      onDateRangeChange(period);\n    }\n  };\n\n  const handleComparisonToggle = () => {\n    const newState = !comparisonEnabled;\n    setComparisonEnabled(newState);\n    if (onComparisonToggle) {\n      onComparisonToggle(newState);\n    }\n  };\n\n  const selectedPeriodData = fiscalPeriods.find(p => p.key === selectedPeriod);\n\n  return (\n    <div className=\"flex items-center space-x-4\">\n      {/* Period Selector */}\n      <div className=\"relative\">\n        <Button\n          variant=\"outline\"\n          onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n          iconName=\"Calendar\"\n          iconPosition=\"left\"\n          className=\"min-w-[140px] justify-between\"\n        >\n          <span>{selectedPeriodData?.label}</span>\n          <Icon \n            name={isDropdownOpen ? \"ChevronUp\" : \"ChevronDown\"} \n            size={16} \n            className=\"ml-2\"\n          />\n        </Button>\n\n        {isDropdownOpen && (\n          <div className=\"absolute top-full left-0 mt-2 w-64 bg-surface border border-border rounded-lg shadow-floating z-50\">\n            <div className=\"p-2\">\n              {fiscalPeriods.map((period) => (\n                <button\n                  key={period.key}\n                  onClick={() => handlePeriodSelect(period)}\n                  className={`w-full text-left p-3 rounded-lg transition-colors duration-200 ${\n                    selectedPeriod === period.key\n                      ? 'bg-primary-50 text-primary border border-primary-200' :'hover:bg-secondary-50 text-text-primary'\n                  }`}\n                >\n                  <div className=\"font-medium\">{period.label}</div>\n                  <div className=\"text-xs text-text-muted mt-1\">{period.description}</div>\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Comparison Toggle */}\n      <div className=\"flex items-center space-x-2\">\n        <button\n          onClick={handleComparisonToggle}\n          className={`flex items-center space-x-2 px-3 py-2 rounded-lg border transition-colors duration-200 ${\n            comparisonEnabled\n              ? 'bg-accent-50 border-accent-200 text-accent' :'bg-surface border-border text-text-secondary hover:bg-secondary-50'\n          }`}\n        >\n          <Icon \n            name={comparisonEnabled ? \"ToggleRight\" : \"ToggleLeft\"} \n            size={16}\n            color={comparisonEnabled ? 'var(--color-accent)' : 'currentColor'}\n          />\n          <span className=\"text-sm font-medium\">Compare</span>\n        </button>\n      </div>\n\n      {/* Export Button */}\n      <Button\n        variant=\"ghost\"\n        iconName=\"Download\"\n        iconPosition=\"left\"\n        onClick={() => {\n          // Mock export functionality\n          console.log('Exporting executive summary...');\n        }}\n      >\n        Export PDF\n      </Button>\n\n      {/* Refresh Indicator */}\n      <div className=\"flex items-center space-x-2 text-text-muted\">\n        <Icon name=\"RefreshCw\" size={14} className=\"animate-spin-slow\" />\n        <span className=\"text-xs\">Updated 5 min ago</span>\n      </div>\n    </div>\n  );\n};\n\nexport default DateRangePicker;","import React, { useState } from 'react';\nimport { Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Area, AreaChart } from 'recharts';\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst RevenueChart = ({ data = [], loading = false, showForecast = true }) => {\n  const [viewMode, setViewMode] = useState('monthly');\n  const [showComparison, setShowComparison] = useState(false);\n\n  const mockData = [\n    { period: 'Jan', revenue: 125000, forecast: 130000, lastYear: 98000, orders: 1250 },\n    { period: 'Feb', revenue: 142000, forecast: 145000, lastYear: 112000, orders: 1420 },\n    { period: 'Mar', revenue: 158000, forecast: 162000, lastYear: 125000, orders: 1580 },\n    { period: 'Apr', revenue: 167000, forecast: 170000, lastYear: 134000, orders: 1670 },\n    { period: 'May', revenue: 189000, forecast: 195000, lastYear: 145000, orders: 1890 },\n    { period: 'Jun', revenue: 203000, forecast: 210000, lastYear: 167000, orders: 2030 },\n    { period: 'Jul', revenue: 218000, forecast: 225000, lastYear: 178000, orders: 2180 },\n    { period: 'Aug', revenue: 234000, forecast: 240000, lastYear: 189000, orders: 2340 },\n    { period: 'Sep', revenue: 245000, forecast: 250000, lastYear: 201000, orders: 2450 },\n    { period: 'Oct', revenue: 267000, forecast: 275000, lastYear: 215000, orders: 2670 },\n    { period: 'Nov', revenue: 289000, forecast: 295000, lastYear: 234000, orders: 2890 },\n    { period: 'Dec', revenue: 312000, forecast: 320000, lastYear: 256000, orders: 3120 }\n  ];\n\n  const chartData = data.length > 0 ? data : mockData;\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-surface border border-border rounded-lg p-4 shadow-floating\">\n          <p className=\"font-medium text-text-primary mb-2\">{label}</p>\n          {payload.map((entry, index) => (\n            <div key={index} className=\"flex items-center justify-between space-x-4 mb-1\">\n              <div className=\"flex items-center space-x-2\">\n                <div \n                  className=\"w-3 h-3 rounded-full\"\n                  style={{ backgroundColor: entry.color }}\n                />\n                <span className=\"text-sm text-text-secondary capitalize\">{entry.dataKey}</span>\n              </div>\n              <span className=\"text-sm font-medium text-text-primary\">\n                {formatCurrency(entry.value)}\n              </span>\n            </div>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const viewModes = [\n    { key: 'monthly', label: 'Monthly', icon: 'Calendar' },\n    { key: 'weekly', label: 'Weekly', icon: 'CalendarDays' },\n    { key: 'daily', label: 'Daily', icon: 'Clock' }\n  ];\n\n  if (loading) {\n    return (\n      <div className=\"bg-surface rounded-lg border border-border p-6\">\n        <div className=\"animate-pulse\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"h-6 bg-secondary-200 rounded w-48\"></div>\n            <div className=\"flex space-x-2\">\n              {[1, 2, 3].map(i => (\n                <div key={i} className=\"h-8 w-20 bg-secondary-200 rounded\"></div>\n              ))}\n            </div>\n          </div>\n          <div className=\"h-80 bg-secondary-200 rounded\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-surface rounded-lg border border-border p-6\">\n      {/* Chart Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h3 className=\"text-lg font-semibold text-text-primary\">Revenue Trends & Forecasting</h3>\n          <p className=\"text-sm text-text-muted mt-1\">\n            Monthly revenue performance with seasonal indicators and growth projections\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {/* View Mode Selector */}\n          <div className=\"flex bg-secondary-100 rounded-lg p-1\">\n            {viewModes.map((mode) => (\n              <button\n                key={mode.key}\n                onClick={() => setViewMode(mode.key)}\n                className={`flex items-center space-x-1 px-3 py-1.5 rounded-md text-sm font-medium transition-colors duration-200 ${\n                  viewMode === mode.key\n                    ? 'bg-surface text-primary shadow-sm'\n                    : 'text-text-secondary hover:text-text-primary'\n                }`}\n              >\n                <Icon name={mode.icon} size={14} />\n                <span>{mode.label}</span>\n              </button>\n            ))}\n          </div>\n\n          {/* Comparison Toggle */}\n          <Button\n            variant={showComparison ? \"primary\" : \"outline\"}\n            size=\"sm\"\n            onClick={() => setShowComparison(!showComparison)}\n            iconName=\"GitCompare\"\n            iconPosition=\"left\"\n          >\n            Compare YoY\n          </Button>\n        </div>\n      </div>\n\n      {/* Chart Container */}\n      <div className=\"h-80 w-full\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <AreaChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <defs>\n              <linearGradient id=\"revenueGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"var(--color-primary)\" stopOpacity={0.3}/>\n                <stop offset=\"95%\" stopColor=\"var(--color-primary)\" stopOpacity={0}/>\n              </linearGradient>\n              <linearGradient id=\"forecastGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"var(--color-accent)\" stopOpacity={0.2}/>\n                <stop offset=\"95%\" stopColor=\"var(--color-accent)\" stopOpacity={0}/>\n              </linearGradient>\n            </defs>\n            \n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--color-border)\" />\n            <XAxis \n              dataKey=\"period\" \n              stroke=\"var(--color-text-muted)\"\n              fontSize={12}\n              tickLine={false}\n              axisLine={false}\n            />\n            <YAxis \n              stroke=\"var(--color-text-muted)\"\n              fontSize={12}\n              tickLine={false}\n              axisLine={false}\n              tickFormatter={formatCurrency}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            \n            {/* Main Revenue Area */}\n            <Area\n              type=\"monotone\"\n              dataKey=\"revenue\"\n              stroke=\"var(--color-primary)\"\n              strokeWidth={3}\n              fill=\"url(#revenueGradient)\"\n              name=\"Revenue\"\n            />\n            \n            {/* Forecast Line */}\n            {showForecast && (\n              <Line\n                type=\"monotone\"\n                dataKey=\"forecast\"\n                stroke=\"var(--color-accent)\"\n                strokeWidth={2}\n                strokeDasharray=\"5 5\"\n                dot={false}\n                name=\"Forecast\"\n              />\n            )}\n            \n            {/* Year-over-Year Comparison */}\n            {showComparison && (\n              <Line\n                type=\"monotone\"\n                dataKey=\"lastYear\"\n                stroke=\"var(--color-secondary)\"\n                strokeWidth={2}\n                dot={false}\n                name=\"Last Year\"\n              />\n            )}\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n\n      {/* Chart Legend */}\n      <div className=\"flex items-center justify-center space-x-6 mt-4 pt-4 border-t border-border\">\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-3 h-3 rounded-full bg-primary\"></div>\n          <span className=\"text-sm text-text-secondary\">Current Revenue</span>\n        </div>\n        {showForecast && (\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-3 h-1 bg-accent\"></div>\n            <span className=\"text-sm text-text-secondary\">Forecast</span>\n          </div>\n        )}\n        {showComparison && (\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-3 h-3 rounded-full bg-secondary\"></div>\n            <span className=\"text-sm text-text-secondary\">Previous Year</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RevenueChart;","import React, { useState } from 'react';\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst AlertsPanel = ({ alerts = [], loading = false }) => {\n  const [filter, setFilter] = useState('all');\n  const [isExpanded, setIsExpanded] = useState(true);\n\n  const mockAlerts = [\n    {\n      id: 1,\n      type: 'critical',\n      title: 'Inventory Critical',\n      message: 'iPhone 15 Pro stock below 10 units',\n      timestamp: new Date(Date.now() - 300000),\n      category: 'inventory',\n      actionRequired: true,\n      resolved: false\n    },\n    {\n      id: 2,\n      type: 'warning',\n      title: 'Conversion Rate Drop',\n      message: 'Mobile conversion down 15% vs last week',\n      timestamp: new Date(Date.now() - 900000),\n      category: 'performance',\n      actionRequired: true,\n      resolved: false\n    },\n    {\n      id: 3,\n      type: 'info',\n      title: 'Payment Gateway Update',\n      message: 'Stripe integration updated successfully',\n      timestamp: new Date(Date.now() - 1800000),\n      category: 'system',\n      actionRequired: false,\n      resolved: true\n    },\n    {\n      id: 4,\n      type: 'success',\n      title: 'Revenue Milestone',\n      message: 'Monthly target achieved 5 days early',\n      timestamp: new Date(Date.now() - 3600000),\n      category: 'achievement',\n      actionRequired: false,\n      resolved: false\n    },\n    {\n      id: 5,\n      type: 'warning',\n      title: 'High Cart Abandonment',\n      message: 'Cart abandonment rate increased to 68%',\n      timestamp: new Date(Date.now() - 7200000),\n      category: 'performance',\n      actionRequired: true,\n      resolved: false\n    }\n  ];\n\n  const alertData = alerts.length > 0 ? alerts : mockAlerts;\n\n  const getAlertIcon = (type) => {\n    switch (type) {\n      case 'critical': return 'AlertTriangle';\n      case 'warning': return 'AlertCircle';\n      case 'info': return 'Info';\n      case 'success': return 'CheckCircle';\n      default: return 'Bell';\n    }\n  };\n\n  const getAlertColor = (type) => {\n    switch (type) {\n      case 'critical': return 'text-error';\n      case 'warning': return 'text-warning';\n      case 'info': return 'text-primary';\n      case 'success': return 'text-success';\n      default: return 'text-text-muted';\n    }\n  };\n\n  const getAlertBgColor = (type) => {\n    switch (type) {\n      case 'critical': return 'bg-error-50 border-error-200';\n      case 'warning': return 'bg-warning-50 border-warning-200';\n      case 'info': return 'bg-primary-50 border-primary-200';\n      case 'success': return 'bg-success-50 border-success-200';\n      default: return 'bg-secondary-50 border-secondary-200';\n    }\n  };\n\n  const formatTimeAgo = (timestamp) => {\n    const now = new Date();\n    const diff = now - timestamp;\n    const minutes = Math.floor(diff / 60000);\n    const hours = Math.floor(diff / 3600000);\n    const days = Math.floor(diff / 86400000);\n\n    if (days > 0) return `${days}d ago`;\n    if (hours > 0) return `${hours}h ago`;\n    if (minutes > 0) return `${minutes}m ago`;\n    return 'Just now';\n  };\n\n  const filteredAlerts = alertData.filter(alert => {\n    if (filter === 'all') return true;\n    if (filter === 'unresolved') return !alert.resolved;\n    if (filter === 'actionRequired') return alert.actionRequired;\n    return alert.type === filter;\n  });\n\n  const filterOptions = [\n    { key: 'all', label: 'All Alerts', count: alertData.length },\n    { key: 'unresolved', label: 'Unresolved', count: alertData.filter(a => !a.resolved).length },\n    { key: 'critical', label: 'Critical', count: alertData.filter(a => a.type === 'critical').length },\n    { key: 'actionRequired', label: 'Action Required', count: alertData.filter(a => a.actionRequired).length }\n  ];\n\n  if (loading) {\n    return (\n      <div className=\"bg-surface rounded-lg border border-border p-6\">\n        <div className=\"animate-pulse\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"h-6 bg-secondary-200 rounded w-32\"></div>\n            <div className=\"h-8 w-8 bg-secondary-200 rounded\"></div>\n          </div>\n          {[1, 2, 3, 4].map(i => (\n            <div key={i} className=\"mb-4 p-3 bg-secondary-100 rounded-lg\">\n              <div className=\"h-4 bg-secondary-200 rounded w-3/4 mb-2\"></div>\n              <div className=\"h-3 bg-secondary-200 rounded w-1/2\"></div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-surface rounded-lg border border-border\">\n      {/* Panel Header */}\n      <div className=\"flex items-center justify-between p-6 border-b border-border\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"flex items-center justify-center w-8 h-8 bg-warning-50 rounded-lg\">\n            <Icon name=\"Bell\" size={16} color=\"var(--color-warning)\" strokeWidth={2} />\n          </div>\n          <div>\n            <h3 className=\"text-lg font-semibold text-text-primary\">Performance Alerts</h3>\n            <p className=\"text-sm text-text-muted\">\n              {filteredAlerts.filter(a => !a.resolved).length} active alerts requiring attention\n            </p>\n          </div>\n        </div>\n        \n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => setIsExpanded(!isExpanded)}\n          iconName={isExpanded ? \"ChevronUp\" : \"ChevronDown\"}\n        />\n      </div>\n\n      {isExpanded && (\n        <>\n          {/* Filter Tabs */}\n          <div className=\"px-6 py-4 border-b border-border\">\n            <div className=\"flex flex-wrap gap-2\">\n              {filterOptions.map((option) => (\n                <button\n                  key={option.key}\n                  onClick={() => setFilter(option.key)}\n                  className={`flex items-center space-x-2 px-3 py-1.5 rounded-lg text-sm font-medium transition-colors duration-200 ${\n                    filter === option.key\n                      ? 'bg-primary-50 text-primary border border-primary-200' :'text-text-secondary hover:text-text-primary hover:bg-secondary-50'\n                  }`}\n                >\n                  <span>{option.label}</span>\n                  <span className={`px-1.5 py-0.5 rounded-full text-xs ${\n                    filter === option.key\n                      ? 'bg-primary-100 text-primary' :'bg-secondary-200 text-text-muted'\n                  }`}>\n                    {option.count}\n                  </span>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Alerts List */}\n          <div className=\"max-h-96 overflow-y-auto\">\n            {filteredAlerts.length === 0 ? (\n              <div className=\"p-6 text-center\">\n                <Icon name=\"CheckCircle\" size={48} color=\"var(--color-success)\" className=\"mx-auto mb-3\" />\n                <p className=\"text-text-muted\">No alerts match your current filter</p>\n              </div>\n            ) : (\n              <div className=\"p-4 space-y-3\">\n                {filteredAlerts.map((alert) => (\n                  <div\n                    key={alert.id}\n                    className={`p-4 rounded-lg border transition-all duration-200 hover:shadow-soft ${\n                      alert.resolved ? 'opacity-60' : ''\n                    } ${getAlertBgColor(alert.type)}`}\n                  >\n                    <div className=\"flex items-start space-x-3\">\n                      <div className={`flex-shrink-0 ${getAlertColor(alert.type)}`}>\n                        <Icon name={getAlertIcon(alert.type)} size={18} strokeWidth={2} />\n                      </div>\n                      \n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center justify-between mb-1\">\n                          <h4 className=\"text-sm font-medium text-text-primary truncate\">\n                            {alert.title}\n                          </h4>\n                          <span className=\"text-xs text-text-muted flex-shrink-0 ml-2\">\n                            {formatTimeAgo(alert.timestamp)}\n                          </span>\n                        </div>\n                        \n                        <p className=\"text-sm text-text-secondary mb-2\">\n                          {alert.message}\n                        </p>\n                        \n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-2\">\n                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                              alert.type === 'critical' ? 'bg-error-100 text-error' :\n                              alert.type === 'warning' ? 'bg-warning-100 text-warning' :\n                              alert.type === 'success'? 'bg-success-100 text-success' : 'bg-primary-100 text-primary'\n                            }`}>\n                              {alert.category}\n                            </span>\n                            \n                            {alert.actionRequired && (\n                              <span className=\"px-2 py-1 rounded-full text-xs font-medium bg-secondary-100 text-text-secondary\">\n                                Action Required\n                              </span>\n                            )}\n                          </div>\n                          \n                          {!alert.resolved && (\n                            <Button\n                              variant=\"ghost\"\n                              size=\"xs\"\n                              onClick={() => console.log('Resolving alert:', alert.id)}\n                              iconName=\"Check\"\n                              iconPosition=\"left\"\n                            >\n                              Resolve\n                            </Button>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Panel Footer */}\n          <div className=\"px-6 py-4 border-t border-border\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm text-text-muted\">\n                Showing {filteredAlerts.length} of {alertData.length} alerts\n              </span>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => console.log('View all alerts')}\n                iconName=\"ExternalLink\"\n                iconPosition=\"right\"\n              >\n                View All\n              </Button>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default AlertsPanel;","import React, { useState } from 'react';\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst GeographicHeatmap = ({ data = [], loading = false }) => {\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [viewMode, setViewMode] = useState('revenue');\n\n  const mockRegionalData = [\n    {\n      region: 'North America',\n      country: 'United States',\n      revenue: 1250000,\n      orders: 8500,\n      customers: 12000,\n      growth: 15.2,\n      coordinates: { lat: 39.8283, lng: -98.5795 },\n      states: [\n        { name: 'California', revenue: 425000, orders: 2890, growth: 18.5 },\n        { name: 'New York', revenue: 315000, orders: 2140, growth: 12.3 },\n        { name: 'Texas', revenue: 285000, orders: 1940, growth: 16.8 },\n        { name: 'Florida', revenue: 225000, orders: 1530, growth: 14.2 }\n      ]\n    },\n    {\n      region: 'Europe',\n      country: 'United Kingdom',\n      revenue: 890000,\n      orders: 6200,\n      customers: 8500,\n      growth: 12.8,\n      coordinates: { lat: 55.3781, lng: -3.4360 },\n      states: [\n        { name: 'England', revenue: 620000, orders: 4340, growth: 13.2 },\n        { name: 'Scotland', revenue: 145000, orders: 1015, growth: 11.5 },\n        { name: 'Wales', revenue: 85000, orders: 595, growth: 10.8 },\n        { name: 'N. Ireland', revenue: 40000, orders: 280, growth: 9.2 }\n      ]\n    },\n    {\n      region: 'Asia Pacific',\n      country: 'Australia',\n      revenue: 675000,\n      orders: 4800,\n      customers: 6200,\n      growth: 22.5,\n      coordinates: { lat: -25.2744, lng: 133.7751 },\n      states: [\n        { name: 'New South Wales', revenue: 285000, orders: 2030, growth: 24.1 },\n        { name: 'Victoria', revenue: 195000, orders: 1390, growth: 21.8 },\n        { name: 'Queensland', revenue: 125000, orders: 890, growth: 20.5 },\n        { name: 'Western Australia', revenue: 70000, orders: 490, growth: 19.2 }\n      ]\n    },\n    {\n      region: 'Europe',\n      country: 'Germany',\n      revenue: 580000,\n      orders: 4100,\n      customers: 5800,\n      growth: 8.9,\n      coordinates: { lat: 51.1657, lng: 10.4515 },\n      states: [\n        { name: 'Bavaria', revenue: 165000, orders: 1165, growth: 9.8 },\n        { name: 'North Rhine-Westphalia', revenue: 145000, orders: 1025, growth: 8.5 },\n        { name: 'Baden-Württemberg', revenue: 125000, orders: 885, growth: 9.2 },\n        { name: 'Berlin', revenue: 85000, orders: 600, growth: 7.8 }\n      ]\n    },\n    {\n      region: 'North America',\n      country: 'Canada',\n      revenue: 420000,\n      orders: 2900,\n      customers: 4100,\n      growth: 18.7,\n      coordinates: { lat: 56.1304, lng: -106.3468 },\n      states: [\n        { name: 'Ontario', revenue: 185000, orders: 1280, growth: 19.5 },\n        { name: 'Quebec', revenue: 125000, orders: 865, growth: 17.2 },\n        { name: 'British Columbia', revenue: 75000, orders: 520, growth: 20.1 },\n        { name: 'Alberta', revenue: 35000, orders: 235, growth: 16.8 }\n      ]\n    }\n  ];\n\n  const regionalData = data.length > 0 ? data : mockRegionalData;\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  const formatNumber = (value) => {\n    return new Intl.NumberFormat('en-US').format(value);\n  };\n\n  const getPerformanceColor = (growth) => {\n    if (growth >= 20) return 'bg-success text-success-foreground';\n    if (growth >= 15) return 'bg-accent text-accent-foreground';\n    if (growth >= 10) return 'bg-warning text-warning-foreground';\n    return 'bg-secondary text-secondary-foreground';\n  };\n\n  const getRegionSize = (revenue) => {\n    const maxRevenue = Math.max(...regionalData.map(r => r.revenue));\n    const ratio = revenue / maxRevenue;\n    return Math.max(40, ratio * 80);\n  };\n\n  const viewModes = [\n    { key: 'revenue', label: 'Revenue', icon: 'DollarSign' },\n    { key: 'orders', label: 'Orders', icon: 'ShoppingCart' },\n    { key: 'growth', label: 'Growth', icon: 'TrendingUp' }\n  ];\n\n  if (loading) {\n    return (\n      <div className=\"bg-surface rounded-lg border border-border p-6\">\n        <div className=\"animate-pulse\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"h-6 bg-secondary-200 rounded w-48\"></div>\n            <div className=\"flex space-x-2\">\n              {[1, 2, 3].map(i => (\n                <div key={i} className=\"h-8 w-20 bg-secondary-200 rounded\"></div>\n              ))}\n            </div>\n          </div>\n          <div className=\"h-64 bg-secondary-200 rounded mb-4\"></div>\n          <div className=\"grid grid-cols-2 gap-4\">\n            {[1, 2, 3, 4].map(i => (\n              <div key={i} className=\"h-16 bg-secondary-200 rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-surface rounded-lg border border-border p-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h3 className=\"text-lg font-semibold text-text-primary\">Geographic Performance</h3>\n          <p className=\"text-sm text-text-muted mt-1\">\n            Regional sales distribution and market penetration analysis\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <div className=\"flex bg-secondary-100 rounded-lg p-1\">\n            {viewModes.map((mode) => (\n              <button\n                key={mode.key}\n                onClick={() => setViewMode(mode.key)}\n                className={`flex items-center space-x-1 px-3 py-1.5 rounded-md text-sm font-medium transition-colors duration-200 ${\n                  viewMode === mode.key\n                    ? 'bg-surface text-primary shadow-sm'\n                    : 'text-text-secondary hover:text-text-primary'\n                }`}\n              >\n                <Icon name={mode.icon} size={14} />\n                <span>{mode.label}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* World Map Visualization */}\n      <div className=\"relative bg-secondary-50 rounded-lg p-8 mb-6\" style={{ height: '300px' }}>\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <div className=\"relative w-full h-full max-w-4xl\">\n            {/* Simplified world map representation */}\n            <svg viewBox=\"0 0 800 400\" className=\"w-full h-full\">\n              {/* Background */}\n              <rect width=\"800\" height=\"400\" fill=\"var(--color-secondary-100)\" />\n              \n              {/* Continents (simplified shapes) */}\n              <path d=\"M100 150 L200 120 L280 140 L300 180 L250 220 L150 200 Z\" fill=\"var(--color-secondary-200)\" />\n              <path d=\"M350 100 L500 90 L550 130 L520 180 L400 190 L340 150 Z\" fill=\"var(--color-secondary-200)\" />\n              <path d=\"M600 200 L720 180 L750 220 L700 280 L620 270 Z\" fill=\"var(--color-secondary-200)\" />\n              \n              {/* Data points */}\n              {regionalData.map((region, index) => {\n                const x = 150 + (index * 120);\n                const y = 150 + (Math.sin(index) * 50);\n                const size = getRegionSize(region[viewMode] || region.revenue);\n                \n                return (\n                  <g key={region.country}>\n                    <circle\n                      cx={x}\n                      cy={y}\n                      r={size / 4}\n                      fill={region.growth >= 15 ? 'var(--color-success)' : \n                            region.growth >= 10 ? 'var(--color-accent)': 'var(--color-warning)'}\n                      fillOpacity={0.7}\n                      stroke=\"white\"\n                      strokeWidth={2}\n                      className=\"cursor-pointer hover:opacity-90 transition-opacity\"\n                      onClick={() => setSelectedRegion(region)}\n                    />\n                    <text\n                      x={x}\n                      y={y + size / 4 + 15}\n                      textAnchor=\"middle\"\n                      className=\"text-xs font-medium fill-current text-text-primary\"\n                    >\n                      {region.country}\n                    </text>\n                  </g>\n                );\n              })}\n            </svg>\n          </div>\n        </div>\n      </div>\n\n      {/* Regional Performance Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\">\n        {regionalData.slice(0, 6).map((region) => (\n          <div\n            key={region.country}\n            className={`p-4 rounded-lg border transition-all duration-200 cursor-pointer hover:shadow-soft ${\n              selectedRegion?.country === region.country\n                ? 'border-primary bg-primary-50' :'border-border bg-surface hover:border-primary-200'\n            }`}\n            onClick={() => setSelectedRegion(region)}\n          >\n            <div className=\"flex items-center justify-between mb-3\">\n              <div>\n                <h4 className=\"font-medium text-text-primary\">{region.country}</h4>\n                <p className=\"text-sm text-text-muted\">{region.region}</p>\n              </div>\n              <div className={`px-2 py-1 rounded-full text-xs font-medium ${getPerformanceColor(region.growth)}`}>\n                +{region.growth}%\n              </div>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-text-secondary\">Revenue</span>\n                <span className=\"text-sm font-medium text-text-primary\">\n                  {formatCurrency(region.revenue)}\n                </span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-text-secondary\">Orders</span>\n                <span className=\"text-sm font-medium text-text-primary\">\n                  {formatNumber(region.orders)}\n                </span>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-text-secondary\">Customers</span>\n                <span className=\"text-sm font-medium text-text-primary\">\n                  {formatNumber(region.customers)}\n                </span>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Selected Region Details */}\n      {selectedRegion && (\n        <div className=\"bg-primary-50 border border-primary-200 rounded-lg p-4\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h4 className=\"font-semibold text-text-primary\">\n              {selectedRegion.country} - Detailed Breakdown\n            </h4>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setSelectedRegion(null)}\n              iconName=\"X\"\n            />\n          </div>\n          \n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            {selectedRegion.states?.map((state) => (\n              <div key={state.name} className=\"bg-surface rounded-lg p-3 border border-border\">\n                <h5 className=\"font-medium text-text-primary text-sm mb-2\">{state.name}</h5>\n                <div className=\"space-y-1\">\n                  <div className=\"flex justify-between text-xs\">\n                    <span className=\"text-text-secondary\">Revenue</span>\n                    <span className=\"font-medium\">{formatCurrency(state.revenue)}</span>\n                  </div>\n                  <div className=\"flex justify-between text-xs\">\n                    <span className=\"text-text-secondary\">Orders</span>\n                    <span className=\"font-medium\">{formatNumber(state.orders)}</span>\n                  </div>\n                  <div className=\"flex justify-between text-xs\">\n                    <span className=\"text-text-secondary\">Growth</span>\n                    <span className={`font-medium ${state.growth >= 15 ? 'text-success' : state.growth >= 10 ? 'text-accent' : 'text-warning'}`}>\n                      +{state.growth}%\n                    </span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GeographicHeatmap;","import React from 'react';\nimport Icon from '../../../components/AppIcon';\n\nconst ExecutiveSummary = ({ data = {}, loading = false }) => {\n  const mockSummaryData = {\n    totalRevenue: 2847000,\n    revenueGrowth: 18.5,\n    totalOrders: 18420,\n    orderGrowth: 12.3,\n    avgOrderValue: 154.67,\n    aovGrowth: 5.8,\n    conversionRate: 3.24,\n    conversionGrowth: -2.1,\n    activeCustomers: 34567,\n    customerGrowth: 15.2,\n    repeatCustomerRate: 42.8,\n    repeatGrowth: 8.9,\n    topPerformingCategory: 'Electronics',\n    categoryRevenue: 1245000,\n    categoryGrowth: 22.1,\n    inventoryTurnover: 8.4,\n    turnoverGrowth: 6.7,\n    customerAcquisitionCost: 28.50,\n    cacGrowth: -12.4,\n    customerLifetimeValue: 485.20,\n    clvGrowth: 14.8,\n    grossMargin: 34.2,\n    marginGrowth: 2.1,\n    returnRate: 4.8,\n    returnGrowth: -8.5\n  };\n\n  const summaryData = Object.keys(data).length > 0 ? data : mockSummaryData;\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  const formatNumber = (value) => {\n    return new Intl.NumberFormat('en-US').format(value);\n  };\n\n  const formatPercentage = (value) => {\n    return `${value.toFixed(1)}%`;\n  };\n\n  const getGrowthColor = (growth) => {\n    if (growth > 0) return 'text-success';\n    if (growth < 0) return 'text-error';\n    return 'text-text-muted';\n  };\n\n  const getGrowthIcon = (growth) => {\n    if (growth > 0) return 'TrendingUp';\n    if (growth < 0) return 'TrendingDown';\n    return 'Minus';\n  };\n\n  const summaryMetrics = [\n    {\n      category: 'Revenue Performance',\n      icon: 'DollarSign',\n      color: 'bg-primary-50 text-primary',\n      metrics: [\n        {\n          label: 'Total Revenue',\n          value: formatCurrency(summaryData.totalRevenue),\n          growth: summaryData.revenueGrowth,\n          description: 'Year-to-date revenue performance'\n        },\n        {\n          label: 'Average Order Value',\n          value: formatCurrency(summaryData.avgOrderValue),\n          growth: summaryData.aovGrowth,\n          description: 'Average transaction value'\n        },\n        {\n          label: 'Gross Margin',\n          value: formatPercentage(summaryData.grossMargin),\n          growth: summaryData.marginGrowth,\n          description: 'Overall profitability margin'\n        }\n      ]\n    },\n    {\n      category: 'Customer Metrics',\n      icon: 'Users',\n      color: 'bg-accent-50 text-accent',\n      metrics: [\n        {\n          label: 'Active Customers',\n          value: formatNumber(summaryData.activeCustomers),\n          growth: summaryData.customerGrowth,\n          description: 'Monthly active customer base'\n        },\n        {\n          label: 'Repeat Customer Rate',\n          value: formatPercentage(summaryData.repeatCustomerRate),\n          growth: summaryData.repeatGrowth,\n          description: 'Customer retention performance'\n        },\n        {\n          label: 'Customer Lifetime Value',\n          value: formatCurrency(summaryData.customerLifetimeValue),\n          growth: summaryData.clvGrowth,\n          description: 'Average customer value over time'\n        }\n      ]\n    },\n    {\n      category: 'Operational Excellence',\n      icon: 'Activity',\n      color: 'bg-warning-50 text-warning',\n      metrics: [\n        {\n          label: 'Total Orders',\n          value: formatNumber(summaryData.totalOrders),\n          growth: summaryData.orderGrowth,\n          description: 'Order volume performance'\n        },\n        {\n          label: 'Conversion Rate',\n          value: formatPercentage(summaryData.conversionRate),\n          growth: summaryData.conversionGrowth,\n          description: 'Website conversion efficiency'\n        },\n        {\n          label: 'Inventory Turnover',\n          value: `${summaryData.inventoryTurnover}x`,\n          growth: summaryData.turnoverGrowth,\n          description: 'Inventory management efficiency'\n        }\n      ]\n    }\n  ];\n\n  if (loading) {\n    return (\n      <div className=\"bg-surface rounded-lg border border-border p-6\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-6 bg-secondary-200 rounded w-48 mb-6\"></div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {[1, 2, 3].map(i => (\n              <div key={i} className=\"space-y-4\">\n                <div className=\"h-5 bg-secondary-200 rounded w-32\"></div>\n                {[1, 2, 3].map(j => (\n                  <div key={j} className=\"p-4 bg-secondary-100 rounded-lg\">\n                    <div className=\"h-4 bg-secondary-200 rounded w-24 mb-2\"></div>\n                    <div className=\"h-6 bg-secondary-200 rounded w-20 mb-1\"></div>\n                    <div className=\"h-3 bg-secondary-200 rounded w-32\"></div>\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-surface rounded-lg border border-border p-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h3 className=\"text-lg font-semibold text-text-primary\">Executive Summary</h3>\n          <p className=\"text-sm text-text-muted mt-1\">\n            Key performance indicators and business health metrics\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-2 text-text-muted\">\n          <Icon name=\"Clock\" size={14} />\n          <span className=\"text-xs\">Updated 2 min ago</span>\n        </div>\n      </div>\n\n      {/* Summary Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {summaryMetrics.map((category) => (\n          <div key={category.category} className=\"space-y-4\">\n            {/* Category Header */}\n            <div className=\"flex items-center space-x-3\">\n              <div className={`flex items-center justify-center w-8 h-8 rounded-lg ${category.color}`}>\n                <Icon name={category.icon} size={16} strokeWidth={2} />\n              </div>\n              <h4 className=\"font-medium text-text-primary\">{category.category}</h4>\n            </div>\n\n            {/* Category Metrics */}\n            <div className=\"space-y-3\">\n              {category.metrics.map((metric) => (\n                <div\n                  key={metric.label}\n                  className=\"p-4 bg-secondary-50 rounded-lg border border-secondary-200 hover:bg-secondary-100 transition-colors duration-200\"\n                >\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <span className=\"text-sm font-medium text-text-secondary\">\n                      {metric.label}\n                    </span>\n                    <div className=\"flex items-center space-x-1\">\n                      <Icon\n                        name={getGrowthIcon(metric.growth)}\n                        size={12}\n                        className={getGrowthColor(metric.growth)}\n                        strokeWidth={2}\n                      />\n                      <span className={`text-xs font-medium ${getGrowthColor(metric.growth)}`}>\n                        {metric.growth > 0 ? '+' : ''}{formatPercentage(Math.abs(metric.growth))}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"mb-2\">\n                    <span className=\"text-xl font-bold text-text-primary\">\n                      {metric.value}\n                    </span>\n                  </div>\n                  \n                  <p className=\"text-xs text-text-muted\">\n                    {metric.description}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Key Insights */}\n      <div className=\"mt-8 pt-6 border-t border-border\">\n        <h4 className=\"font-medium text-text-primary mb-4\">Key Insights</h4>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div className=\"flex items-start space-x-3 p-4 bg-success-50 border border-success-200 rounded-lg\">\n            <Icon name=\"TrendingUp\" size={16} color=\"var(--color-success)\" strokeWidth={2} />\n            <div>\n              <p className=\"text-sm font-medium text-success mb-1\">Strong Revenue Growth</p>\n              <p className=\"text-xs text-text-secondary\">\n                Revenue increased by {formatPercentage(summaryData.revenueGrowth)} with {summaryData.topPerformingCategory} leading at {formatPercentage(summaryData.categoryGrowth)} growth\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-start space-x-3 p-4 bg-accent-50 border border-accent-200 rounded-lg\">\n            <Icon name=\"Users\" size={16} color=\"var(--color-accent)\" strokeWidth={2} />\n            <div>\n              <p className=\"text-sm font-medium text-accent mb-1\">Customer Acquisition</p>\n              <p className=\"text-xs text-text-secondary\">\n                CAC reduced by {formatPercentage(Math.abs(summaryData.cacGrowth))} while CLV increased by {formatPercentage(summaryData.clvGrowth)}\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-start space-x-3 p-4 bg-warning-50 border border-warning-200 rounded-lg\">\n            <Icon name=\"AlertTriangle\" size={16} color=\"var(--color-warning)\" strokeWidth={2} />\n            <div>\n              <p className=\"text-sm font-medium text-warning mb-1\">Conversion Optimization</p>\n              <p className=\"text-xs text-text-secondary\">\n                Conversion rate declined by {formatPercentage(Math.abs(summaryData.conversionGrowth))} - requires immediate attention\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-start space-x-3 p-4 bg-primary-50 border border-primary-200 rounded-lg\">\n            <Icon name=\"Package\" size={16} color=\"var(--color-primary)\" strokeWidth={2} />\n            <div>\n              <p className=\"text-sm font-medium text-primary mb-1\">Operational Efficiency</p>\n              <p className=\"text-xs text-text-secondary\">\n                Return rate improved by {formatPercentage(Math.abs(summaryData.returnGrowth))} with inventory turnover at {summaryData.inventoryTurnover}x\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExecutiveSummary;","import React from 'react';\nimport Icon from '../AppIcon';\n\nconst LoadingIndicator = ({ \n  type = 'spinner', \n  size = 'md', \n  message = 'Loading...', \n  showMessage = true,\n  className = '',\n  color = 'primary'\n}) => {\n  const sizeClasses = {\n    xs: 'h-3 w-3',\n    sm: 'h-4 w-4',\n    md: 'h-5 w-5',\n    lg: 'h-6 w-6',\n    xl: 'h-8 w-8'\n  };\n\n  const textSizeClasses = {\n    xs: 'text-xs',\n    sm: 'text-sm',\n    md: 'text-sm',\n    lg: 'text-base',\n    xl: 'text-lg'\n  };\n\n  const colorClasses = {\n    primary: 'border-primary',\n    secondary: 'border-secondary',\n    accent: 'border-accent',\n    muted: 'border-text-muted'\n  };\n\n  const SpinnerLoader = () => (\n    <div \n      className={`${sizeClasses[size]} border-2 border-text-muted border-t-${color} rounded-full animate-spin`}\n      role=\"status\"\n      aria-label=\"Loading\"\n    />\n  );\n\n  const DotsLoader = () => (\n    <div className=\"flex items-center space-x-1\" role=\"status\" aria-label=\"Loading\">\n      {[0, 1, 2].map((index) => (\n        <div\n          key={index}\n          className={`${sizeClasses[size]} bg-${color} rounded-full animate-pulse`}\n          style={{\n            animationDelay: `${index * 0.2}s`,\n            animationDuration: '1s'\n          }}\n        />\n      ))}\n    </div>\n  );\n\n  const PulseLoader = () => (\n    <div \n      className={`${sizeClasses[size]} bg-${color} rounded-full animate-pulse-soft`}\n      role=\"status\"\n      aria-label=\"Loading\"\n    />\n  );\n\n  const BarLoader = () => (\n    <div className=\"w-full bg-secondary-200 rounded-full h-2 overflow-hidden\" role=\"status\" aria-label=\"Loading\">\n      <div className={`h-full bg-${color} rounded-full animate-pulse`} style={{ width: '60%' }} />\n    </div>\n  );\n\n  const IconLoader = () => (\n    <Icon \n      name=\"Loader2\" \n      size={size === 'xs' ? 12 : size === 'sm' ? 16 : size === 'md' ? 20 : size === 'lg' ? 24 : 32}\n      className=\"animate-spin\"\n      color={`var(--color-${color})`}\n    />\n  );\n\n  const renderLoader = () => {\n    switch (type) {\n      case 'dots':\n        return <DotsLoader />;\n      case 'pulse':\n        return <PulseLoader />;\n      case 'bar':\n        return <BarLoader />;\n      case 'icon':\n        return <IconLoader />;\n      default:\n        return <SpinnerLoader />;\n    }\n  };\n\n  const LoadingComponent = () => (\n    <div className={`loading-indicator ${className}`}>\n      {renderLoader()}\n      {showMessage && message && (\n        <span className={`${textSizeClasses[size]} text-text-secondary font-medium`}>\n          {message}\n        </span>\n      )}\n    </div>\n  );\n\n  // For bar type, render without flex wrapper\n  if (type === 'bar') {\n    return (\n      <div className={`space-y-2 ${className}`}>\n        {renderLoader()}\n        {showMessage && message && (\n          <div className={`${textSizeClasses[size]} text-text-secondary font-medium text-center`}>\n            {message}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return <LoadingComponent />;\n};\n\n// Specialized loading components for common use cases\nexport const DashboardLoader = ({ message = 'Loading dashboard...' }) => (\n  <div className=\"flex items-center justify-center min-h-[200px]\">\n    <LoadingIndicator \n      type=\"spinner\" \n      size=\"lg\" \n      message={message}\n      className=\"flex-col space-y-3\"\n    />\n  </div>\n);\n\nexport const DataLoader = ({ message = 'Fetching data...' }) => (\n  <LoadingIndicator \n    type=\"dots\" \n    size=\"sm\" \n    message={message}\n    color=\"accent\"\n  />\n);\n\nexport const InlineLoader = ({ message = 'Processing...' }) => (\n  <LoadingIndicator \n    type=\"icon\" \n    size=\"sm\" \n    message={message}\n    showMessage={false}\n  />\n);\n\nexport const ProgressLoader = ({ message = 'Loading...', progress }) => (\n  <div className=\"space-y-2\">\n    <LoadingIndicator \n      type=\"bar\" \n      message={message}\n    />\n    {progress && (\n      <div className=\"text-xs text-text-muted text-center\">\n        {progress}%\n      </div>\n    )}\n  </div>\n);\n\nexport default LoadingIndicator;","import React, { useState, useEffect } from 'react';\nimport DashboardHeader from '../../components/ui/DashboardHeader';\nimport KPICard from './components/KPICard';\nimport DateRangePicker from './components/DateRangePicker';\nimport RevenueChart from './components/RevenueChart';\nimport AlertsPanel from './components/AlertsPanel';\nimport GeographicHeatmap from './components/GeographicHeatmap';\nimport ExecutiveSummary from './components/ExecutiveSummary';\nimport LoadingIndicator from '../../components/ui/LoadingIndicator';\nimport Icon from '../../components/AppIcon';\nimport Button from '../../components/ui/Button';\n\nconst ExecutiveOverviewDashboard = () => {\n  const [loading, setLoading] = useState(true);\n  const [dateRange, setDateRange] = useState('MTD');\n  const [showComparison, setShowComparison] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n\n  // Mock data loading simulation\n  useEffect(() => {\n    const loadDashboardData = async () => {\n      setLoading(true);\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      setLoading(false);\n    };\n\n    loadDashboardData();\n  }, [dateRange]);\n\n  const handleDateRangeChange = (period) => {\n    setDateRange(period.key);\n    console.log('Date range changed to:', period);\n  };\n\n  const handleComparisonToggle = (enabled) => {\n    setShowComparison(enabled);\n    console.log('Comparison mode:', enabled);\n  };\n\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    // Simulate refresh delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    setRefreshing(false);\n  };\n\n  const handleCategoryFilter = (category) => {\n    setSelectedCategory(category);\n    console.log('Category filter changed to:', category);\n  };\n\n  const handleExportPDF = () => {\n    console.log('Exporting executive dashboard to PDF...');\n    // Mock export functionality\n  };\n\n  // Mock KPI data\n  const kpiData = [\n    {\n      title: 'Total Revenue',\n      value: '$2.84M',\n      change: '+18.5%',\n      changeType: 'positive',\n      icon: 'DollarSign',\n      trend: [125000, 142000, 158000, 167000, 189000, 203000, 218000, 234000, 245000, 267000, 289000, 312000],\n      loading: loading\n    },\n    {\n      title: 'Conversion Rate',\n      value: '3.24%',\n      change: '-2.1%',\n      changeType: 'negative',\n      icon: 'Target',\n      trend: [3.8, 3.6, 3.4, 3.2, 3.1, 3.0, 3.1, 3.2, 3.3, 3.2, 3.1, 3.24],\n      loading: loading\n    },\n    {\n      title: 'Average Order Value',\n      value: '$154.67',\n      change: '+5.8%',\n      changeType: 'positive',\n      icon: 'ShoppingCart',\n      trend: [142, 145, 148, 151, 149, 152, 155, 158, 156, 159, 162, 154.67],\n      loading: loading\n    },\n    {\n      title: 'Active Customers',\n      value: '34.5K',\n      change: '+15.2%',\n      changeType: 'positive',\n      icon: 'Users',\n      trend: [28000, 29200, 30100, 31500, 32200, 32800, 33100, 33600, 34000, 34200, 34300, 34500],\n      loading: loading\n    }\n  ];\n\n  const categoryFilters = [\n    { key: 'all', label: 'All Categories', icon: 'Grid3X3' },\n    { key: 'electronics', label: 'Electronics', icon: 'Smartphone' },\n    { key: 'clothing', label: 'Clothing', icon: 'Shirt' },\n    { key: 'home', label: 'Home & Garden', icon: 'Home' },\n    { key: 'books', label: 'Books', icon: 'Book' },\n    { key: 'sports', label: 'Sports', icon: 'Dumbbell' }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <DashboardHeader />\n      \n      <div className=\"dashboard-content\">\n        <div className=\"max-w-7xl mx-auto px-6 py-8\">\n          {/* Page Header */}\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-8\">\n            <div className=\"mb-4 lg:mb-0\">\n              <h1 className=\"text-3xl font-bold text-text-primary mb-2\">\n                Executive Overview Dashboard\n              </h1>\n              <p className=\"text-text-secondary\">\n                Strategic KPI dashboard for C-level rapid business assessment and decision-making\n              </p>\n            </div>\n            \n            <div className=\"flex flex-col sm:flex-row items-start sm:items-center space-y-3 sm:space-y-0 sm:space-x-4\">\n              <DateRangePicker\n                onDateRangeChange={handleDateRangeChange}\n                onComparisonToggle={handleComparisonToggle}\n                showComparison={showComparison}\n              />\n              \n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={handleRefresh}\n                  disabled={refreshing}\n                  iconName={refreshing ? \"Loader2\" : \"RefreshCw\"}\n                  iconPosition=\"left\"\n                  className={refreshing ? \"animate-spin\" : \"\"}\n                >\n                  {refreshing ? 'Refreshing...' : 'Refresh'}\n                </Button>\n                \n                <Button\n                  variant=\"primary\"\n                  size=\"sm\"\n                  onClick={handleExportPDF}\n                  iconName=\"Download\"\n                  iconPosition=\"left\"\n                >\n                  Export PDF\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* Category Filters */}\n          <div className=\"mb-8\">\n            <div className=\"flex flex-wrap gap-2\">\n              {categoryFilters.map((filter) => (\n                <button\n                  key={filter.key}\n                  onClick={() => handleCategoryFilter(filter.key)}\n                  className={`flex items-center space-x-2 px-4 py-2 rounded-lg border transition-colors duration-200 ${\n                    selectedCategory === filter.key\n                      ? 'bg-primary-50 border-primary-200 text-primary' :'bg-surface border-border text-text-secondary hover:text-text-primary hover:bg-secondary-50'\n                  }`}\n                >\n                  <Icon name={filter.icon} size={16} strokeWidth={2} />\n                  <span className=\"text-sm font-medium\">{filter.label}</span>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* KPI Cards Row */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            {kpiData.map((kpi, index) => (\n              <KPICard\n                key={index}\n                title={kpi.title}\n                value={kpi.value}\n                change={kpi.change}\n                changeType={kpi.changeType}\n                icon={kpi.icon}\n                trend={kpi.trend}\n                loading={kpi.loading}\n              />\n            ))}\n          </div>\n\n          {/* Main Content Grid */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8\">\n            {/* Revenue Chart - 2 columns */}\n            <div className=\"lg:col-span-2\">\n              <RevenueChart\n                loading={loading}\n                showForecast={true}\n              />\n            </div>\n\n            {/* Alerts Panel - 1 column */}\n            <div className=\"lg:col-span-1\">\n              <AlertsPanel loading={loading} />\n            </div>\n          </div>\n\n          {/* Geographic Heatmap */}\n          <div className=\"mb-8\">\n            <GeographicHeatmap loading={loading} />\n          </div>\n\n          {/* Executive Summary */}\n          <div className=\"mb-8\">\n            <ExecutiveSummary loading={loading} />\n          </div>\n\n          {/* Loading Overlay */}\n          {loading && (\n            <div className=\"fixed inset-0 bg-secondary-900/20 backdrop-blur-sm z-50 flex items-center justify-center\">\n              <div className=\"bg-surface rounded-lg border border-border p-8 shadow-modal\">\n                <LoadingIndicator\n                  type=\"spinner\"\n                  size=\"lg\"\n                  message=\"Loading executive dashboard...\"\n                  className=\"flex-col space-y-4\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Footer */}\n          <div className=\"mt-12 pt-8 border-t border-border\">\n            <div className=\"flex flex-col sm:flex-row items-center justify-between text-sm text-text-muted\">\n              <div className=\"flex items-center space-x-4 mb-4 sm:mb-0\">\n                <span>Last updated: {new Date().toLocaleString()}</span>\n                <div className=\"flex items-center space-x-1\">\n                  <div className=\"w-2 h-2 bg-success rounded-full animate-pulse\"></div>\n                  <span>Live data</span>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-4\">\n                <span>Data refresh: Every 30 minutes</span>\n                <div className=\"flex items-center space-x-1\">\n                  <Icon name=\"Shield\" size={14} />\n                  <span>Secure</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExecutiveOverviewDashboard;"],"names":["KPICard","title","value","change","changeType","icon","trend","loading","className","getChangeColor","getChangeIcon","renderSparkline","max","min","range","points","index","x","y","jsx","jsxs","Icon","DateRangePicker","onDateRangeChange","onComparisonToggle","showComparison","selectedPeriod","setSelectedPeriod","useState","isDropdownOpen","setIsDropdownOpen","comparisonEnabled","setComparisonEnabled","fiscalPeriods","handlePeriodSelect","period","handleComparisonToggle","newState","selectedPeriodData","Button","RevenueChart","data","showForecast","viewMode","setViewMode","setShowComparison","mockData","chartData","formatCurrency","CustomTooltip","active","payload","label","entry","viewModes","mode","ResponsiveContainer","AreaChart","CartesianGrid","XAxis","YAxis","Tooltip","Area","Line","AlertsPanel","alerts","filter","setFilter","isExpanded","setIsExpanded","mockAlerts","alertData","getAlertIcon","type","getAlertColor","getAlertBgColor","formatTimeAgo","timestamp","diff","minutes","hours","days","filteredAlerts","alert","filterOptions","i","Fragment","option","GeographicHeatmap","selectedRegion","setSelectedRegion","mockRegionalData","regionalData","formatNumber","getPerformanceColor","growth","getRegionSize","revenue","maxRevenue","r","ratio","region","size","_a","state","ExecutiveSummary","mockSummaryData","summaryData","formatPercentage","getGrowthColor","getGrowthIcon","summaryMetrics","j","category","metric","LoadingIndicator","message","showMessage","color","sizeClasses","textSizeClasses","SpinnerLoader","DotsLoader","PulseLoader","BarLoader","IconLoader","renderLoader","LoadingComponent","ExecutiveOverviewDashboard","setLoading","dateRange","setDateRange","refreshing","setRefreshing","selectedCategory","setSelectedCategory","useEffect","resolve","handleDateRangeChange","enabled","handleRefresh","handleCategoryFilter","handleExportPDF","kpiData","categoryFilters","DashboardHeader","kpi"],"mappings":"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"}